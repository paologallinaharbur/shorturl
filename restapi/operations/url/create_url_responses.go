// Code generated by go-swagger; DO NOT EDIT.

package url

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/paologallinaharbur/shorturl/models"
)

// CreateURLCreatedCode is the HTTP code returned for type CreateURLCreated
const CreateURLCreatedCode int = 201

/*CreateURLCreated created

swagger:response createUrlCreated
*/
type CreateURLCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Shorturl `json:"body,omitempty"`
}

// NewCreateURLCreated creates CreateURLCreated with default headers values
func NewCreateURLCreated() *CreateURLCreated {

	return &CreateURLCreated{}
}

// WithPayload adds the payload to the create Url created response
func (o *CreateURLCreated) WithPayload(payload *models.Shorturl) *CreateURLCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Url created response
func (o *CreateURLCreated) SetPayload(payload *models.Shorturl) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateURLCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateURLInternalServerErrorCode is the HTTP code returned for type CreateURLInternalServerError
const CreateURLInternalServerErrorCode int = 500

/*CreateURLInternalServerError internal server error

swagger:response createUrlInternalServerError
*/
type CreateURLInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateURLInternalServerError creates CreateURLInternalServerError with default headers values
func NewCreateURLInternalServerError() *CreateURLInternalServerError {

	return &CreateURLInternalServerError{}
}

// WithPayload adds the payload to the create Url internal server error response
func (o *CreateURLInternalServerError) WithPayload(payload *models.Error) *CreateURLInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create Url internal server error response
func (o *CreateURLInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateURLInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
