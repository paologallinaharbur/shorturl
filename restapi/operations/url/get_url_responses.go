// Code generated by go-swagger; DO NOT EDIT.

package url

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/paologallinaharbur/shorturl/models"
)

// GetURLOKCode is the HTTP code returned for type GetURLOK
const GetURLOKCode int = 200

/*GetURLOK OK

swagger:response getUrlOK
*/
type GetURLOK struct {

	/*
	  In: Body
	*/
	Payload *models.URL `json:"body,omitempty"`
}

// NewGetURLOK creates GetURLOK with default headers values
func NewGetURLOK() *GetURLOK {

	return &GetURLOK{}
}

// WithPayload adds the payload to the get Url o k response
func (o *GetURLOK) WithPayload(payload *models.URL) *GetURLOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Url o k response
func (o *GetURLOK) SetPayload(payload *models.URL) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetURLOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetURLInternalServerErrorCode is the HTTP code returned for type GetURLInternalServerError
const GetURLInternalServerErrorCode int = 500

/*GetURLInternalServerError internal server error

swagger:response getUrlInternalServerError
*/
type GetURLInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetURLInternalServerError creates GetURLInternalServerError with default headers values
func NewGetURLInternalServerError() *GetURLInternalServerError {

	return &GetURLInternalServerError{}
}

// WithPayload adds the payload to the get Url internal server error response
func (o *GetURLInternalServerError) WithPayload(payload *models.Error) *GetURLInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get Url internal server error response
func (o *GetURLInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetURLInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
