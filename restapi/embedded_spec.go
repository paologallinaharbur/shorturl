// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "url shortener",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/url": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Create a new short url. Specify the URL with the protocol, es: ` + "`" + `http://example.com` + "`" + `. \n It returns a new short version of the URL that can be used as: http://endpoint/{shortURL}.",
        "operationId": "createUrl",
        "parameters": [
          {
            "name": "infoURL",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/url"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/shorturl"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/url/{shortURL}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Get a already existing url. The only argument that is requested is the shortURL to be fetched.",
        "operationId": "getUrl",
        "parameters": [
          {
            "type": "string",
            "description": "Short URL to be passed to retrieve long URL",
            "name": "shortURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/url"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Delete a already existing url. The only argument that is requested is the shortURL to be deleted.",
        "operationId": "deleteUrl",
        "parameters": [
          {
            "type": "string",
            "description": "Short URL to be passed to retrieve long URL",
            "name": "shortURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "deleted"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "shorturl": {
      "type": "object",
      "required": [
        "shorturl"
      ],
      "properties": {
        "shorturl": {
          "description": "shorneted URL",
          "type": "string"
        }
      }
    },
    "url": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "description": "initial URL to be shortened",
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "url shortener",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "paths": {
    "/url": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Create a new short url. Specify the URL with the protocol, es: ` + "`" + `http://example.com` + "`" + `. \n It returns a new short version of the URL that can be used as: http://endpoint/{shortURL}.",
        "operationId": "createUrl",
        "parameters": [
          {
            "name": "infoURL",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/url"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/shorturl"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/url/{shortURL}": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Get a already existing url. The only argument that is requested is the shortURL to be fetched.",
        "operationId": "getUrl",
        "parameters": [
          {
            "type": "string",
            "description": "Short URL to be passed to retrieve long URL",
            "name": "shortURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/url"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Url"
        ],
        "summary": "Delete a already existing url. The only argument that is requested is the shortURL to be deleted.",
        "operationId": "deleteUrl",
        "parameters": [
          {
            "type": "string",
            "description": "Short URL to be passed to retrieve long URL",
            "name": "shortURL",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "deleted"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "shorturl": {
      "type": "object",
      "required": [
        "shorturl"
      ],
      "properties": {
        "shorturl": {
          "description": "shorneted URL",
          "type": "string"
        }
      }
    },
    "url": {
      "type": "object",
      "required": [
        "url"
      ],
      "properties": {
        "url": {
          "description": "initial URL to be shortened",
          "type": "string"
        }
      }
    }
  }
}`))
}
